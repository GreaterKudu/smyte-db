licenses(["notice"])

# copy the header to librdkafka directory to make cpplint happy
genrule(
    name = "exported_c_header",
    srcs = [
        "src/rdkafka.h"
    ],
    outs = [
        "librdkafka/rdkafka.h"
    ],
    cmd = "cp $(<) $(@)",
)

genrule(
    name = "exported_header",
    srcs = [
        "src-cpp/rdkafkacpp.h",
    ],
    outs = [
        "librdkafka/rdkafkacpp.h",
    ],
    cmd = "cp $(<) $(@)",
)

cc_library(
    name = "librdkafka_c",
    srcs = [
        "src/queue.h",
        "src/rd.h",
        "src/rdaddr.h",
        "src/rdavg.h",
        "src/rdatomic.h",
        "src/rdcrc32.h",
        "src/rdendian.h",
        "src/rdinterval.h",
        "src/rdgz.h",
        "src/rdlist.h",
        "src/rdlog.h",
        "src/rdrand.h",
        "src/rdkafka_assignor.h",
        "src/rdkafka_broker.h",
        "src/rdkafka_buf.h",
        "src/rdkafka_cgrp.h",
        "src/rdkafka_conf.h",
        "src/rdkafka_event.h",
        "src/rdkafka_int.h",
        "src/rdkafka_feature.h",
        "src/rdkafka_metadata.h",
        "src/rdkafka_msg.h",
        "src/rdkafka_offset.h",
        "src/rdkafka_op.h",
        "src/rdkafka_partition.h",
        "src/rdkafka_pattern.h",
        "src/rdkafka_proto.h",
        "src/rdkafka_queue.h",
        "src/rdkafka_request.h",
        "src/rdkafka_sasl.h",
        "src/rdkafka_subscription.h",
        "src/rdkafka_timer.h",
        "src/rdkafka_topic.h",
        "src/rdkafka_transport.h",
        "src/rdkafka_transport_int.h",
        "src/rdposix.h",
        "src/rdregex.h",
        "src/rdsysqueue.h",
        "src/rdtime.h",
        "src/rdtypes.h",
        "src/regexp.h",
        "src/snappy.h",
        "src/snappy_compat.h",
        "src/tinycthread.h",
        "src/rdkafka.c",
        "src/rdkafka_broker.c",
        "src/rdkafka_event.c",
        "src/rdkafka_feature.c",
        "src/rdkafka_metadata.c",
        "src/rdkafka_msg.c",
        "src/rdkafka_topic.c",
        "src/rdkafka_conf.c",
        "src/rdkafka_timer.c",
        "src/rdkafka_offset.c",
        "src/rdkafka_transport.c",
        "src/rdkafka_buf.c",
        "src/rdkafka_queue.c",
        "src/rdkafka_op.c",
        "src/rdkafka_request.c",
        "src/rdkafka_cgrp.c",
        "src/rdkafka_pattern.c",
        "src/rdkafka_partition.c",
        "src/rdkafka_subscription.c",
        "src/rdkafka_assignor.c",
        "src/rdkafka_range_assignor.c",
        "src/rdkafka_roundrobin_assignor.c",
        "src/rdcrc32.c",
        "src/rdaddr.c",
        "src/rdrand.c",
        "src/rdregex.c",
        "src/rdstring.c",
        "src/rdlist.c",
        "src/regexp.c",
        "src/tinycthread.c",
        "src/rdlog.c",
        "src/rdgz.c",
        "src/snappy.c",
    ],
    hdrs = [
        ":exported_c_header",
        "src/rdkafka.h",
    ],
    copts = [
        "-Wall",
        "-Wfloat-equal",
        "-Wpointer-arith",
        "-Wsign-compare",
    ],
    linkopts = [
        "-ldl",
        "-lrt",
        "-lpthread",
        "-lssl",
        "-lcrypto",
    ],
    deps = [
        "//external:librdkafka_config",
        "//external:snappy",
        "//external:zlib",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "librdkafka",
    srcs = [
        "src-cpp/rdkafkacpp.h",
        "src-cpp/rdkafkacpp_int.h",
        "src-cpp/ConfImpl.cpp",
        "src-cpp/ConsumerImpl.cpp",
        "src-cpp/HandleImpl.cpp",
        "src-cpp/KafkaConsumerImpl.cpp",
        "src-cpp/MessageImpl.cpp",
        "src-cpp/MetadataImpl.cpp",
        "src-cpp/ProducerImpl.cpp",
        "src-cpp/QueueImpl.cpp",
        "src-cpp/RdKafka.cpp",
        "src-cpp/TopicImpl.cpp",
        "src-cpp/TopicPartitionImpl.cpp",
    ],
    hdrs = [
        ":exported_header",
    ],
    copts = [
        "-Wall",
        "-Wfloat-equal",
        "-Wno-non-virtual-dtor",
        "-Wpointer-arith",
        "-Wsign-compare",
    ],
    linkopts = [
        "-lrt",
        "-lpthread",
    ],
    deps = [
        ":librdkafka_c",
    ],
    visibility = ["//visibility:public"],
)
